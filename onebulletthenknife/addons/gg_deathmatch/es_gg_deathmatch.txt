// GunGame Deathmatch Addon
// (c)2007 by GunGame Coding Team (cagemonkey,XE_Manup)
//
// requires ES_Tools v0.416+
//

block load
{
	// Spawnpoint table: id, userid, loc_x, loc_y, loc_z, eye0, eye1
	es_xset gg_spawn_table "CREATE TABLE IF NOT EXISTS spawnpoints(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, userid INTEGER DEFAULT 0, loc_x FLOAT NOT NULL, loc_y FLOAT NOT NULL, loc_z FLOAT NOT NULL, eye0 FLOAT NOT NULL, eye1 FLOAT NOT NULL)"
	// Open spawnpoint database
	ifx true(eventscripts_currentmap) do
	{
		es_set gg_last_map server_var(eventscripts_currentmap)
		forcecase gg_last_map lower
		es_sql open server_var(gg_last_map) |onebulletthenknife/addons/gg_deathmatch/spawnpoints
		es_sql query server_var(gg_last_map) server_var(gg_spawn_table)
	}
	else do
	{
		// This has to be initialized on a conditional
		es_xset gg_last_map 0 "Stores last map played to cleanup open databases"
	}
	
	es_xset gg_exists 0
	es_xexists gg_exists command gg_dm_reset_player
	ifx false(gg_exists) do
	{
		es_xregcmd gg_dm_reset_player onebulletthenknife/addons/gg_deathmatch/gg_dm_reset_player "Internal GunGame command"
	}

	es_xset gg_exists 0
	es_xexists gg_exists command gg_respawn
	ifx false(gg_exists) do
	{
		es_xregcmd gg_respawn onebulletthenknife/addons/gg_deathmatch/respawn_cmd "Internal GunGame command"
	}

	// Init vars
	es_xset gg_eye0 0 "Eye angle 0, Location: gg_deathmatch"
	es_xset gg_eye1 0 "Eye angle 1, Location: gg_deathmatch"
	es_xset gg_dm_tmp 0
	es_xset gg_dm_tmp2 0
	es_xset gg_dm_tmp3 0
	es_xset gg_dm_tmp4 0
	es_xset gg_health 0
	es_xset gg_armor 0
	
	// Disable objectives
	es_xset gg_map_obj 0
	
}


event es_map_start
{
	if (server_var(gg_last_map) != 0) do
	{
		// Make spawnpointx available again
		es_sql query server_var(gg_last_map) "UPDATE spawnpoints SET userid = 0"
		es_xsql close server_var(gg_last_map)
	}
	es_set gg_last_map server_var(eventscripts_currentmap)
	forcecase gg_last_map lower
	
	// Load database
	es_sql open server_var(gg_last_map) |onebulletthenknife/addons/gg_deathmatch/spawnpoints
	es_sql query server_var(gg_last_map) server_var(gg_spawn_table)
	es_sql query server_var(gg_last_map) "UPDATE spawnpoints SET userid = 0"
	es_xsql close server_var(gg_last_map)
}

event weapon_fire
{
	es est_god event_var(userid) 0
	es est_SetPlayerColor event_var(userid) 255 255 255 255 1
}

event player_spawn
{
	if (event_var(es_userteam) > 1) do
	{
		es_set gg_userid event_var(userid)
		if (event_var(es_userteam) > 1) do
		{
			es_sql queryvalue server_var(gg_last_map) gg_exists "SELECT COUNT(*) FROM spawnpoints WHERE userid = 0"
			ifx true(gg_exists) do
			{
				es_xdoblock onebulletthenknife/addons/gg_deathmatch/randspawn
			}
			else do
			{
				es_xdbgmsg 1 [GunGame] Not enough custom spawnpoints for map, using default map spawns
			}
		}
		
		// spawn protectin
		es est_god event_var(userid) 1
		es est_SetPlayerColor event_var(userid) 255 255 255 150 1
		es_delayed server_var(gg_dm_spawn_protect) gg_dm_reset_player event_var(userid)
	
	}
}


block gg_dm_reset_player
{
	es_xgetargv gg_userid 1
	es est_god server_var(gg_userid) 0
	es est_SetPlayerColor server_var(gg_userid) 255 255 255 255 1
}


event player_death
{
	est_DeleteRagDolls
	ifx true(gg_map_obj) do
	{
		est_Remove item_defuser
	}
	es_xdelayed .1 est_RemoveIdle weapon
	
	es_delayed server_var(gg_dm_spawntime) est_spawn event_var(userid)
	
	// Make spawnpoint available again
	es_set gg_userid event_var(userid)
	es_xformatqv gg_query "UPDATE spawnpoints SET userid = 0 WHERE userid = '%1'" gg_userid
	es_sql query server_var(gg_last_map) server_var(gg_query)
}

event player_team
{
	if (event_var(disconnect) == 0) do
	{
		if (event_var(team) < 2) do
		{
			// Make spawnpoint available again
			es_set gg_userid event_var(userid)
			es_xformatqv gg_query "UPDATE spawnpoints SET userid = 0 WHERE userid = '%1'" gg_userid
			es_sql query server_var(gg_last_map) server_var(gg_query)
		}
		else do
		{
			es_delayed 10 gg_respawn event_var(userid)
		}
	}
}

event player_disconnect
{
	// Make spawnpoint available again
	// Make spawnpoint available again
	es_set gg_userid event_var(userid)
	es_xformatqv gg_query "UPDATE spawnpoints SET userid = 0 WHERE userid = '%1'" gg_userid
	es_sql query server_var(gg_last_map) server_var(gg_query)
}

block randspawn
{
	//Reset used spawnpoints
	// Make spawnpoints available again
	es_xformatqv gg_query "UPDATE spawnpoints SET userid = 0 WHERE userid = '%1'" gg_userid
	es_sql query server_var(gg_last_map) server_var(gg_query)
	
	// Choose spawnpoint and respawn players
	es_sql queryvalue server_var(gg_last_map) gg_tmp "SELECT id FROM spawnpoints WHERE userid = 0 ORDER BY RANDOM() LIMIT 1"
	es_xformatqv gg_query "UPDATE spawnpoints SET userid = '%1' WHERE id = '%2'" gg_userid gg_tmp
	es_sql query server_var(gg_last_map) server_var(gg_query)
	es_xformatqv gg_query "SELECT loc_x, loc_y, loc_z, eye0, eye1 FROM spawnpoints WHERE id = '%1'" gg_tmp
	es_sql query server_var(gg_last_map) gg_tmp_keygroup server_var(gg_query)
	es_xkeygetvalue gg_user_x gg_tmp_keygroup 1 loc_x
	es_xkeygetvalue gg_user_y gg_tmp_keygroup 1 loc_y
	es_xkeygetvalue gg_user_z gg_tmp_keygroup 1 loc_z
	es_xkeygetvalue gg_eye0 gg_tmp_keygroup 1 eye0
	es_xkeygetvalue gg_eye1 gg_tmp_keygroup 1 eye1
	es_xkeygroupdelete gg_tmp_keygroup
	es_setpos server_var(gg_userid) server_var(gg_user_x) server_var(gg_user_y) server_var(gg_user_z)
	es_setang server_var(gg_userid) server_var(gg_eye0) server_var(gg_eye1)
}

block respawn_cmd
{
	es_xgetargv gg_userid 1
	ifx false(gg_userid) do
	{
		es_xgetcmduserid gg_userid
	}
	es_getplayerprop gg_tmp server_var(gg_userid) "CCSPlayer.baseclass.pl.deadflag"
	ifx true(gg_tmp) do
	{
		if (server_var(gg_live_round) == 1) do
		{
			es est_spawn server_var(gg_userid)
		}
	}
}

block unload
{
	// Close spawnpiont database
	if (server_var(gg_last_map) != 0) do
	{
		// Make spawnpointx available again
		es_sql query server_var(gg_last_map) "UPDATE spawnpoints SET userid = 0"
		es_xsql close server_var(gg_last_map)
		es_xset gg_last_map 0
	}
	
}